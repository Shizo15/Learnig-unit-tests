name: CI Pipeline

on:
  push:
    branches:
      - '**'  # Uruchamianie na wszystkich branchach
  pull_request:
    branches:
      - '**'  # Uruchamianie na wszystkich PR

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    # 1. Pobranie kodu
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Instalacja Pythona
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.13.0

    # 3. Instalacja zależności
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov

    # 4. Uruchamianie testów z raportem pokrycia
    - name: Run unit tests with coverage
      run: |
        pytest -vv --cov= .


#  lint:
#    runs-on: ubuntu-latest
#
#    steps:
#    # 1. Pobranie kodu
#    - name: Checkout code
#      uses: actions/checkout@v3
#
#    # 2. Uruchamianie Super-Lintera
#    - name: Run Super-Linter
#      uses: github/super-linter@v5
#      env:
#        VALIDATE_PYTHON_PYLINT: true
#        VALIDATE_ALL_CODEBASE: true
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        DEFAULT_BRANCH: main

#  todo:
#    runs-on: ubuntu-latest
#
#    steps:
#    # 1. Pobranie kodu
#    - name: Checkout code
#      uses: actions/checkout@v3
#
#    # 2. Tworzenie Issues z komentarzy TODO
#    - name: Create Issues from TODO
#      uses: alstr/todo-to-issue-action@v1
#      with:
#        repo-token: ${{ secrets.GITHUB_TOKEN }}
#        label: "TODO"
